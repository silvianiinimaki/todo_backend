{"version":3,"sources":["lista1.js","createTask.js","listPage.js","App.js","reportWebVitals.js","index.js"],"names":["Component","CreateTask","props","React","useState","title","setTitle","description","setDescription","Date","deadline","setDeadline","rating","setRating","submitValue","taskDetails","handleChange","newTask","alert","handleSubmit","event","preventDefault","backHome","style","textAlign","marginTop","className","onSubmit","width","type","name","placeholder","onChange","e","target","value","placeholderText","selected","isClearable","showTimeSelect","closeOnScroll","document","dateFormat","count","size","edit","isHalf","emptyIcon","fullIcon","activeColor","Button","onClick","axios","require","ListPage","setValue","setNewTask","list","setList","useEffect","get","then","response","data","catch","err","console","log","reformattedDate","date","moment","format","createTask","Object","values","map","item","color","checked","deadline_date","newValue","post","concat","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ca564f35.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n \r\n\r\n\r\nclass Lista extends Component  {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: \"\",\r\n            list: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n   handleChange = (event) => {\r\n       this.setState({value: event.target.value})\r\n  };\r\n \r\n   handleSubmit = (event) => {\r\n    if (this.state.value) {\r\n        this.setState({list: this.state.list.concat(this.state.value)})\r\n    }\r\n \r\n    this.setState({value: ''});\r\n \r\n    event.preventDefault();\r\n  };\r\n\r\n   lista = () => {\r\n      return (\r\n        <ul>\r\n        {this.state.list.map(item => (\r\n          <li key={item}>{item}</li>\r\n        ))}\r\n      </ul>\r\n      )\r\n  }\r\n \r\n  render() {\r\n    return (\r\n        <div>\r\n            {this.lista()}\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input type=\"text\" value={this.value} onChange={this.handleChange} />\r\n            <button type=\"submit\">Lisää listaan</button>\r\n          </form>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n \r\nexport default Lista;","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst CreateTask = (props) => {\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n\r\n  const [deadline, setDeadline] = React.useState(new Date());\r\n  const [rating, setRating] = React.useState(\"\");\r\n  const submitValue = () => {\r\n    const taskDetails = {\r\n      title: title,\r\n      description: description,\r\n      deadline: deadline,\r\n      rating: rating,\r\n    };\r\n    if (\r\n      title !== \"\" &&\r\n      deadline !== \"\" &&\r\n      description !== \"\" &&\r\n      rating !== \"\"\r\n    ) {\r\n      props.handleChange(taskDetails);\r\n      props.newTask(false);\r\n    } else {\r\n      alert(\"Jotkin kentät ovat täyttämättä!\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const backHome = () => {\r\n    props.newTask(false);\r\n  };\r\n\r\n  const getTaskInfo = () => {\r\n    return (\r\n      <form\r\n        className=\"ui form\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          marginTop: \"1%\",\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className=\"field\">\r\n          <input\r\n            style={{ width: \"20%\" }}\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Otsikko\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            style={{ width: \"20%\" }}\r\n            type=\"text\"\r\n            name=\"description\"\r\n            placeholder=\"Kuvaus\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <DatePicker\r\n            placeholderText=\"Select deadline\"\r\n            selected={deadline}\r\n            isClearable\r\n            onChange={(deadline) => setDeadline(deadline)}\r\n            showTimeSelect\r\n            closeOnScroll={(e) => e.target === document}\r\n            dateFormat=\"yyyy-MM-dd\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <ReactStars\r\n            count={5}\r\n            size={24}\r\n            edit={true}\r\n            isHalf={false}\r\n            emptyIcon={<i className=\"far fa-star\"></i>}\r\n            fullIcon={<i className=\"fa fa-star\"></i>}\r\n            activeColor=\"#ffd700\"\r\n            onChange={(value) => setRating(value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <Button onClick={submitValue}>Lisää listaan</Button>\r\n          <Button onClick={backHome}>Peruuta</Button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\", marginTop: \"2%\" }}>Luo uusi tehtävä</h1>\r\n      {getTaskInfo()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","import React, { useEffect } from \"react\";\r\nimport CreateTask from \"./createTask\";\r\nimport { Button, Item } from \"semantic-ui-react\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport moment from \"moment\";\r\nconst axios = require(\"axios\");\r\n\r\nconst ListPage = () => {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [newTask, setNewTask] = React.useState(false);\r\n  const [list, setList] = React.useState([]);\r\n  const createTaskButton = () => {\r\n    return (\r\n      <Button className=\"button\" onClick={createTask}>\r\n        Luo uusi tehtävä\r\n      </Button>\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://tamk-4a00ez62-3002-group20.herokuapp.com/api\")\r\n      .then(function (response) {\r\n        setList(response.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const lista = () => {\r\n    const i = Object.values(list);\r\n    return i.map((item) => (\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          marginTop: \"3%\",\r\n          color: \"black\",\r\n        }}\r\n        className=\"item\"\r\n      >\r\n        <div className=\"content\">\r\n          <div className=\"title\">{item.title}</div>\r\n          <div className=\"checked\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={item.checked}\r\n                // ei toimi vielä\r\n                onChange={(item) => (item.checked = !item.checked)}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"extra\">\r\n            Deadline: {reformattedDate(item.deadline_date)}\r\n            <br></br>\r\n            Tärkeys:{\" \"}\r\n            <ReactStars\r\n              count={5}\r\n              value={item.rating}\r\n              size={24}\r\n              edit={false}\r\n              isHalf={false}\r\n              emptyIcon={<i className=\"far fa-star\"></i>}\r\n              fullIcon={<i className=\"fa fa-star\"></i>}\r\n              activeColor=\"#ffd700\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"description\">\r\n            <p>{item.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const reformattedDate = (date) => {\r\n    const resultDate = moment(date).format(\"DD/MM/YYYY\");\r\n    return resultDate;\r\n  };\r\n\r\n  function handleChange(newValue) {\r\n    setValue(newValue);\r\n\r\n    // Try adding new value to database\r\n    axios\r\n      .post(\"https://tamk-4a00ez62-3002-group20.herokuapp.com/user/1\", value)\r\n      .then((response) => console.log(response));\r\n\r\n    setList(list.concat(newValue));\r\n  }\r\n\r\n  function changeNewTask(newValue) {\r\n    setNewTask(newValue);\r\n  }\r\n\r\n  const createTask = () => {\r\n    setNewTask(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ui items\">{lista()}</div>\r\n\r\n      <div style={{ textAlign: \"center\", marginTop: \"5%\" }}>\r\n        {newTask ? (\r\n          <CreateTask\r\n            value={value}\r\n            newTask={changeNewTask}\r\n            handleChange={handleChange}\r\n          />\r\n        ) : (\r\n          createTaskButton()\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n","import Lista from \"./lista\";\r\nimport Lista1 from \"./lista1\";\r\nimport ListPage from \"./listPage\";\r\nimport CreateTask from \"./createTask\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\">\r\n          <ListPage />\r\n        </Route>\r\n        <Route path=\"/addTask\">\r\n          <CreateTask />\r\n        </Route>\r\n        <Route path=\"/editTask\"></Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./App.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}